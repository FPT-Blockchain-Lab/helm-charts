---
quorumFlags:
  privacy: false
  removeKeysOnDelete: false
  updatePeersConfigMap: true

cluster:
  provider: local # choose from: local | aws | azure
  cloudNativeServices: false # set to true to use Cloud Native Services (SecretsManager and IAM for AWS; KeyVault & Managed Identities for Azure)
  reclaimPolicy: Delete # set to either Retain or Delete

aws:
  # the aws cli commands uses the name 'quorum-node-secrets-sa' so only change this if you altered the name
  serviceAccountName: quorum-node-secrets-sa
  # the region you are deploying to
  region: ap-southeast-2

azure:
  # the script/bootstrap.sh uses the name 'quorum-pod-identity' so only change this if you altered the name
  identityName: quorum-pod-identity
  # the clientId of the user assigned managed identity created in the template
  identityClientId: azure-clientId
  keyvaultName: azure-keyvault
  # the tenant ID of the key vault
  tenantId: azure-tenantId
  # the subscription ID to use - this needs to be set explictly when using multi tenancy
  subscriptionId: azure-subscriptionId

storage:
  storageClass: null
  sizeLimit: "5Gi"
  pvcSizeLimit: "5Gi"
  # NOTE: when you set this to Retain, the volume WILL persist after the chart is delete and you need to manually delete it
  reclaimPolicy: "Delete" # choose from: Delete | Retain

serviceAccount:
  autoGenerate: true

node:
  goquorum:
    env:
      LC_ADMEND_REQUEST_ADDRESS: "0x9043A4b3ABF6210cdfA95e7ef9B2e1fC8D17d38E"
      LC_MANAGEMENT_ADDRESS: "0x3179C0dDF36a95A9BaEe917fF2D4dbFa08B51462"
      LC_STANDARD_FACTORY_ADDRESS: "0xfB1691a1BF872d4cc823563cC3d78bf740225C36"
      LC_UPAS_FACTORY_ADDRESS: "0xDf8c56d1c4ff6C2f34835513Cd700D4D6A258036"
      LC_ROUTER_ADDRESS: "0xEdD3C07B254995c2520C28F0D4a0f6082006eFDe"
      LC_MODE_ADDRESS: "0xAF3b2ebdcc22513339DBa236AEd1660e917B699c"
    resources:
      cpuLimit: 1
      cpuRequest: 0.1
      memLimit: "2G"
      memRequest: "1G"
    # privKey:
    # pubKey:
    dataPath: "/data/quorum"
    keysPath: "/keys"
    genesisFilePath: "/etc/genesis/genesis.json"
    replicaCount: 1
    account:
      unlock: 0
      password: "password"
      passwordPath: "/keys/accountPassword"
    log:
      verbosity: 5
    miner:
      threads: 1
      blockPeriod: 5
    serviceType: ClusterIP
    qlightServer:
      enabled: true
      addr: "0.0.0.0"
      port: 30305
    p2p:
      enabled: true
      addr: "0.0.0.0"
      port: 30303
      nodePort: 30303
    rpc:
      enabled: true
      lc:
        enabled: true
      addr: "0.0.0.0"
      port: 8545
      corsDomain: "*"
      vHosts: "*"
      api: "admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,istanbul,lc"
      authenticationEnabled: false
    ws:
      enabled: true
      addr: "0.0.0.0"
      port: 8546
      api: "admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,istanbul"
      origins: "*"
      authenticationEnabled: false
    graphql:
      enabled: true
      addr: "0.0.0.0"
      port: 8547
      corsDomain: "*"
      vHosts: "*"
    metrics:
      enabled: true
      pprofaddr: "0.0.0.0"
      pprofport: 9545
      serviceMonitorEnabled: false
      serviceMonitorRelease: rancher-monitoring
    privacy:
      url: "http://localhost:9101"
      pubkeysPath: "/tessera"
      pubkeyFile: "/tessera/tm.pub"

  tessera:
    resources:
      cpuLimit: 0.7
      cpuRequest: 0.5
      memLimit: "2G"
      memRequest: "1G"
    tmkey: ""
    tmpub: ""
    password: "password"
    passwordPath: "/keys/tm.password"
    dataPath: "/data/tessera"
    keysPath: "/keys"
    port: 9000
    tpport: 9080
    q2tport: 9101

  vault:
    global:
      enabled: true
      tlsDisable: "true"
    injector:
      enabled: true
      # Use the Vault K8s Image https://github.com/hashicorp/vault-k8s/
      image:
        repository: "hashicorp/vault-k8s"
        tag: "0.14.1"
      resources:
        requests:
          memory: 50Mi
          cpu: 50m
        limits:
          memory: 256Mi
          cpu: 250m
    server:
      image:
        repository: "hashicorp/vault"
        tag: "1.9.2"
      resources:
        requests:
          memory: 50Mi
          cpu: 500m
        limits:
          memory: 16Gi
          cpu: 2000m
      readinessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
      livenessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true"
        initialDelaySeconds: 60
      # extraEnvironmentVars is a list of extra environment variables to set with the stateful set. These could be
      # used to include variables required for auto-unseal.
      extraEnvironmentVars:
        VAULT_CACERT: /vault/userconfig/tls-ca/tls.crt
      # extraVolumes is a list of extra volumes to mount. These will be exposed
      # to Vault in the path `/vault/userconfig/<name>/`.
      extraVolumes:
        - type: secret
          name: tls-server
        - type: secret
          name: tls-ca
      standalone:
        enabled: false
      # Run Vault in "HA" mode.
      ha:
        enabled: true
        replicas: 3
        config: |
          ui = true

          listener "tcp" {
            tls_disable = 0
            address     = "0.0.0.0:8200"
            tls_cert_file = "/vault/userconfig/tls-server/tls.crt"
            tls_key_file = "/vault/userconfig/tls-server/tls.key"
            tls_min_version = "tls12"
          }

          storage "consul" {
            path = "vault"
            address = "consul-consul-server:8500"
          }
    ui:
      enabled: true
      externalPort: 8200

image:
  goquorum:
    repository: fptblockchainlabbot/quorum
    tag: v22.7.4-fpt.blockchain.lab-0.5.1
  tessera:
    repository: quorumengineering/tessera
    tag: 22.1.1
  hooks:
    repository: consensys/quorum-k8s-hooks
    tag: qgt-0.2.3
    pullPolicy: IfNotPresent
  vault:
    repository: "hashicorp/vault-k8s"
    tag: "1.1.0"
    pullPolicy: IfNotPresent
